// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeOffRequestSubmission;

namespace TimeOffRequestSubmission.Migrations
{
    [DbContext(typeof(EmployeeManagementContext))]
    partial class EmployeeManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.4.21253.1")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimeOffRequestSubmission.DataModels.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Zip")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("RolesId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("TimeOffRequestSubmission.DataModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("TimeOffRequestSubmission.DataModels.TimeoffRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("approvalStatus");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employeeId");

                    b.Property<DateTime>("Enddate")
                        .HasColumnType("datetime")
                        .HasColumnName("enddate");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reason");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("startDate");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TimeoffRequest");
                });

            modelBuilder.Entity("TimeOffRequestSubmission.DataModels.Employee", b =>
                {
                    b.HasOne("TimeOffRequestSubmission.DataModels.Employee", "Manager")
                        .WithMany("Managers")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("FK_EmployeeIdManagerId");

                    b.HasOne("TimeOffRequestSubmission.DataModels.Role", "Roles")
                        .WithMany("Employees")
                        .HasForeignKey("RolesId")
                        .HasConstraintName("FK_EmoployeeRoles")
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("TimeOffRequestSubmission.DataModels.TimeoffRequest", b =>
                {
                    b.HasOne("TimeOffRequestSubmission.DataModels.Employee", "Employee")
                        .WithMany("TimeOffRequests")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_timeoffrequest_employee")
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TimeOffRequestSubmission.DataModels.Employee", b =>
                {
                    b.Navigation("Managers");

                    b.Navigation("TimeOffRequests");
                });

            modelBuilder.Entity("TimeOffRequestSubmission.DataModels.Role", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
